カラム別名
SELECT title AS タイトル,price AS 価格 FROM books;
SELECT title AS アラレちゃん,price AS 400 FROM books;

SELECT DISTINCT category FROM books;

/*priceカラム、priceカラムに100足した値、固定値*/
SELECT price,price+100,'固定値' FROM books;
select price,price+100,'固定値'

/*計算結果の小数部を切り捨てる*/
SELECT floor(120*1.08);
select floor(120*1.08);

３桁毎,挿入 format(値,小数点以下の桁数)
SELECT format(12345678,0);
SELECT format(12345678,1);

/*categoryによって販売階を表示*/
SELECT title AS 書名,category AS 分類,
CASE category WHEN '雑誌' THEN '1F'
WHEN '漫画' THEN '1F'
ELSE '2F' 
END AS 階
FROM books;

case when

select title as 書名,category as 分類,
case category 
when '雑誌' then '1f'
when '漫画' then '1f'
else '2f'
end as 階
from books;

switch category when '雑誌'のような…

SELECT title AS 書名,price AS 価格,
CASE WHEN price < 500 THEN 'えんぴつ'
WHEN price < 1000 THEN 'キーホルダー'
WHEN price < 3000 THEN 'ポスター'
END AS プレゼント
FROM books;

SELECT title AS 書名,price AS 価格,
CASE WHEN price <500 THEN 'えんぴつ'
WHEN price <1000 THEN 'キーホルダー'
WHEN price <3000 THEN 'ポスター' 
END AS プレゼント
FROM books;

//文字数はchar_length()
select title,char_length(title) from books;
SELECT title,char_length(title) FROM books;

//現在日の入力
insert into books (title ,pice,updated)
values('SQL入門',2800,curdate());
INSERT INTO books(title,price,updated)
VALUES('SQL入門',2800,curdate());

SELECT now();

//文字列連結
/*数値が入っている場合自動的に文字列に変換*/
SELECT concat(title,':',price,'円') FROM books;
select concat(title,':',price'円') from books;

current,concat,coalesce

/*updatedがnullのカラムは'更新日未記入'と表示*/
SELECT title,coalesce(updated,'更新日未記入')
FROM books;
select title,coalesce(updated,'更新日未記入')
from books;

//めっちゃ大事！
//副問合せ
//集計関数
select title ,price from books
where price=(selecy max(price) from books);
/*先にmaxを求めてその値を利用*/
SELECT title,price FROM books
WHERE price=(SELECT max(price) FROM books);

//内部結合
select * from cds 
join categories
on cds .cat id=categories.id;

SELECT * FROM cds
JOIN categories
ON cds.cat_id=categories.id;

//左結合
SELECT * FROM cds
LEFT JOIN categories
ON cds.cat_id=categories.id;
left join categories
on cds.cat_id=categories.id;
left join categories
on cds.cat_id=categories.id;

//右結合  
select * from cds
right join categories
on cds.cat_id=categories.id;


//取得カラムの指定
SELECT cds.title,categories.category,cds.price FROM cds
LEFT JOIN categories
ON cds.cat_id=categories.id;
select cds.title,categories.category,cds.price from cds
left join categories
on cds.cat_id=categories.id;

//テーブルに別名
SELECT cd.title,cat.category,cd.price FROM cds AS cd
LEFT JOIN categories AS cat
ON cd.cat_id=cat.id;
select cd.title,cat.category,cd.price from cds as cd
left join categories as cat
on cd.cat_id=cat.id;

